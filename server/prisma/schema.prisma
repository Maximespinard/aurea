// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  username  String    @unique
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  profile   Profile?
}

model Profile {
  id              String    @id @default(cuid())
  userId          String    @unique
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  lastPeriodDate  DateTime?
  cycleLength     Int?      // days (e.g., 28)
  periodDuration  Int?      // days (e.g., 5)
  symptoms        String[]  // array of symptom strings
  contraception   String?
  notes           String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  cycles          Cycle[]
}

model Cycle {
  id            String    @id @default(cuid())
  profileId     String
  profile       Profile   @relation(fields: [profileId], references: [id], onDelete: Cascade)
  startDate     DateTime
  endDate       DateTime?
  isActive      Boolean   @default(false) // currently ongoing period
  notes         String?
  symptoms      String[]  // symptoms for this specific cycle
  flow          String?   // light, medium, heavy
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  dayEntries    DayEntry[]

  @@index([profileId])
  @@index([startDate])
}

model DayEntry {
  id          String    @id @default(cuid())
  cycleId     String
  cycle       Cycle     @relation(fields: [cycleId], references: [id], onDelete: Cascade)
  date        DateTime
  symptoms    String[]  // daily symptoms
  mood        String?   // happy, sad, anxious, etc.
  notes       String?
  flow        String?   // none, light, medium, heavy
  temperature Float?    // basal body temperature
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([cycleId, date])
  @@index([cycleId])
  @@index([date])
}
